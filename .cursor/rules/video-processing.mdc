# VREconder - Video Processing Rules

## Encoder Selection Guidelines

### Primary Encoders
- **libx265**: High quality, slower processing (recommended for archival)
- **hevc_nvenc**: Fast GPU encoding (recommended for batch processing)
- **hevc_qsv**: Intel GPU encoding (recommended for laptops)

### Quality Parameters
- **4K/8K Videos**: CRF 20-26 (higher quality)
- **1080p Videos**: CRF 23-28 (balanced)
- **Content-based**: Animation +2 CRF, Live action -1 CRF

## Processing Workflow Standards

### Video Classification
1. Analyze resolution and codec using MediaInfo
2. Categorize by resolution: 8K, 4K, 1080p, 720p, other
3. Determine optimal processing parameters

### Segment Processing (4K+ videos)
1. Split using LLC project files or time-based segments
2. Process segments in parallel (max workers based on system capability)
3. Merge segments using FFmpeg concat demuxer

### Quality Assurance
- Compare file sizes: target 30-70% of original
- Log processing metrics (time, compression ratio, errors)
- Validate output files with FFprobe before cleanup

## FFmpeg Parameter Standards

### HEVC Encoding (libx265)
```bash
ffmpeg -i input.mp4 \
    -c:v libx265 \
    -preset slower \
    -crf 28 \
    -profile:v main10 \
    -pix_fmt yuv420p10le \
    -c:a aac -b:a 128k \
    -movflags +faststart \
    output.mp4
```

### HEVC Encoding (NVENC)
```bash
ffmpeg -i input.mp4 \
    -c:v hevc_nvenc \
    -preset slow \
    -rc vbr -cq 28 \
    -profile:v main10 \
    -c:a aac -b:a 128k \
    output.mp4
```

## Error Handling Requirements

### File Validation
- Verify file existence and readability
- Check supported formats: mp4, mkv, avi, mov, wmv
- Validate file size limits (configurable max size)

### Processing Safety
- Create temporary files in designated temp directory
- Implement atomic operations (temp â†’ final location)
- Preserve original files until verification complete
- Clean up temporary files on success or failure

## Performance Optimization

### Resource Management
- Limit concurrent encodings based on system resources
- Monitor memory usage during processing
- Use appropriate threading based on encoder and system
- Implement processing queues for large batches

### Batch Processing
- Process similar resolutions together
- Prioritize smaller files first for quick wins
- Skip already processed files (resume capability)
- Report progress and ETA to users

## Configuration Integration

All video processing should reference [config/settings.yaml](mdc:config/settings.yaml) for:
- Encoder preferences and presets
- Quality settings (CRF ranges)
- Path configurations (input, output, temp)
- Performance limits (max workers, memory limits)
- File format preferences and restrictions
